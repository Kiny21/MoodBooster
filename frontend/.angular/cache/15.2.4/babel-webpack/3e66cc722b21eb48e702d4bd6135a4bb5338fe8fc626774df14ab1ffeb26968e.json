{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction PicturePageComponent_tr_10_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const picture_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(picture_r1.content);\n  }\n}\nfunction PicturePageComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function PicturePageComponent_tr_10_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const picture_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.fetchUrlContent(picture_r1));\n    });\n    i0.ɵɵtext(5, \"Fetch Content\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PicturePageComponent_tr_10_div_6_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const picture_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(picture_r1.alt);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", picture_r1.content);\n  }\n}\nexport class PicturePageComponent {\n  constructor(http) {\n    this.http = http;\n    this.pictures = [];\n  }\n  fetchUrlContent(url) {\n    this.http.get(url, {\n      responseType: 'text'\n    }).subscribe(data => {\n      console.log(data); // Log the fetched content\n    }, error => {\n      console.error(error); // Log any errors that occur during the request\n    });\n  }\n}\n\nPicturePageComponent.ɵfac = function PicturePageComponent_Factory(t) {\n  return new (t || PicturePageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nPicturePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PicturePageComponent,\n  selectors: [[\"app-picture-page\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"card\", \"my-5\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function PicturePageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"thead\", 3)(4, \"tr\")(5, \"th\", 4);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 4);\n      i0.ɵɵtext(8, \"Content\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"tbody\");\n      i0.ɵɵtemplate(10, PicturePageComponent_tr_10_Template, 7, 2, \"tr\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pictures);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAeYA,2BAA6B;IACxBA,YAAqB;IAAAA,iBAAI;;;;IAAzBA,eAAqB;IAArBA,wCAAqB;;;;;;IAN9BA,0BAAqC;IAC/BA,YAAiB;IAAAA,iBAAK;IAE1BA,0BAAI;IACMA;MAAA;MAAA;MAAA;MAAA,OAASA,iDAAwB;IAAA,EAAC;IAACA,6BAAa;IAAAA,iBAAS;IACjEA,2EAEM;IACRA,iBAAK;;;;IAPDA,eAAiB;IAAjBA,oCAAiB;IAIbA,eAAqB;IAArBA,yCAAqB;;;ACPvC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,aAAQ,GAAU,EAAE;EAEmB;EAEvCC,eAAe,CAACC,GAAW;IACzB,IAAI,CAACF,IAAI,CAACG,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CACzCC,SAAS,CACRC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CACF;EACL;;;AAfWX,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRjCjB,8BAAuB;MAKGA,oBAAI;MAAAA,iBAAK;MACzBA,6BAAgB;MAAAA,uBAAO;MAAAA,iBAAK;MAGhCA,6BAAO;MACLA,qEASK;MACPA,iBAAQ;;;MAVkBA,gBAAW;MAAXA,sCAAW","names":["i0","PicturePageComponent","constructor","http","fetchUrlContent","url","get","responseType","subscribe","data","console","log","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\picture-page\\picture-page.component.html","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\picture-page\\picture-page.component.ts"],"sourcesContent":["<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Content</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let picture of pictures\">\n          <td>{{ picture.alt }}</td>\n\n          <td>\n            <button (click)=\"fetchUrlContent(picture)\">Fetch Content</button>\n            <div *ngIf=\"picture.content\">\n              <p>{{ picture.content }}</p>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-picture-page',\n  templateUrl: './picture-page.component.html',\n  styleUrls: ['./picture-page.component.css']\n})\nexport class PicturePageComponent {\n  pictures: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  fetchUrlContent(url: string) {\n    this.http.get(url, { responseType: 'text' })\n      .subscribe(\n        data => {\n          console.log(data); // Log the fetched content\n        },\n        error => {\n          console.error(error); // Log any errors that occur during the request\n        }\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}