{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quote.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction QuotePageComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r1.quote);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r1.author);\n  }\n}\nexport class QuotePageComponent {\n  constructor(quoteService, http) {\n    this.quoteService = quoteService;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.quoteService.findAll().subscribe(data => {\n      const randomIndex = Math.floor(Math.random() * data.length);\n      this.quote = data[randomIndex];\n    });\n  }\n  getQuoteUrl() {\n    if (this.quote) {\n      return `http://localhost:8080/api/v1/quotes/${this.quote.id}`;\n    }\n    return '';\n  }\n}\nQuotePageComponent.ɵfac = function QuotePageComponent_Factory(t) {\n  return new (t || QuotePageComponent)(i0.ɵɵdirectiveInject(i1.QuoteService), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nQuotePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuotePageComponent,\n  selectors: [[\"app-quote-page\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"card\", \"my-5\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function QuotePageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"thead\", 3)(4, \"tr\")(5, \"th\", 4);\n      i0.ɵɵtext(6, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 4);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 4);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, QuotePageComponent_tr_12_Template, 7, 3, \"tr\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\".image-container[_ngcontent-%COMP%] {\\r\\n  width: 500px;\\r\\n  height: 500px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.center-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.image[_ngcontent-%COMP%] {\\r\\n  max-width: 100%;\\r\\n  max-height: 100%;\\r\\n  object-fit: contain;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.alt-text[_ngcontent-%COMP%] {\\r\\n  font-size: 40px;\\r\\n  margin-top: 10px;\\r\\n  text-align: center;\\r\\n  color:  #a799b7;\\r\\n  text-shadow: 2px 2px black;\\r\\n  font-weight: bold;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcXVvdGUtcGFnZS9xdW90ZS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsMEJBQTBCO0VBQzFCLGlCQUFpQjtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5pbWFnZS1jb250YWluZXIge1xyXG4gIHdpZHRoOiA1MDBweDtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5jZW50ZXItY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi5pbWFnZSB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLmFsdC10ZXh0IHtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6ICAjYTc5OWI3O1xyXG4gIHRleHQtc2hhZG93OiAycHggMnB4IGJsYWNrO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWQA,0BAAiC;IAC3BA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;;;;IAFtBA,eAAc;IAAdA,iCAAc;IACdA,eAAiB;IAAjBA,oCAAiB;IACjBA,eAAiB;IAAjBA,qCAAiB;;;ACH/B,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,YAAyB,EAAUC,IAAgB;IAAnD,iBAAY,GAAZD,YAAY;IAAuB,SAAI,GAAJC,IAAI;EAE3D;EAEEC,QAAQ;IACN,IAAI,CAACF,YAAY,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC3C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACK,MAAM,CAAC;MAC3D,IAAI,CAACC,KAAK,GAAGN,IAAI,CAACC,WAAW,CAAC;IAChC,CAAC,CAAC;EACJ;EACAM,WAAW;IACT,IAAI,IAAI,CAACD,KAAK,EAAE;MACd,OAAO,uCAAuC,IAAI,CAACA,KAAK,CAACE,EAAE,EAAE;;IAE/D,OAAO,EAAE;EACX;;AAlBSf,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX/BrB,8BAAuB;MAKGA,iBAAC;MAAAA,iBAAK;MACtBA,6BAAgB;MAAAA,oBAAI;MAAAA,iBAAK;MACzBA,6BAAgB;MAAAA,sBAAK;MAAAA,iBAAK;MAG9BA,8BAAO;MACLA,mEAIK;MACPA,iBAAQ;;;MALgBA,gBAAS;MAATA,oCAAS","names":["i0","QuotePageComponent","constructor","quoteService","http","ngOnInit","findAll","subscribe","data","randomIndex","Math","floor","random","length","quote","getQuoteUrl","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\quote-page\\quote-page.component.html","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\quote-page\\quote-page.component.ts"],"sourcesContent":["<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let quote of quotes\">\n          <td>{{ quote.id }}</td>\n          <td>{{ quote.quote }}</td>\n          <td>{{ quote.author}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { QuoteService } from 'src/app/services/quote.service';\nimport { Quote } from 'src/app/shared/models/Quotes';\n\n\n@Component({\n  selector: 'app-quote-page',\n  templateUrl: './quote-page.component.html',\n  styleUrls: ['./quote-page.component.css']\n})\nexport class QuotePageComponent implements OnInit{\n  quote!: Quote;\n\n  constructor(private quoteService:QuoteService, private http: HttpClient){\n\n  }\n\n    ngOnInit(){\n      this.quoteService.findAll().subscribe(data =>{\n        const randomIndex = Math.floor(Math.random() * data.length);\n        this.quote = data[randomIndex];\n      });\n    }\n    getQuoteUrl(): string {\n      if (this.quote) {\n        return `http://localhost:8080/api/v1/quotes/${this.quote.id}`;\n      }\n      return '';\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}