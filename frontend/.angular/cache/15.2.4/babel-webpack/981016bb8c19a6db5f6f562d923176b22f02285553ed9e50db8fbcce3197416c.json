{"ast":null,"code":"\"use strict\";\n\n/* import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CustomValidators } from '../custom.validators';\r\nimport { AuthService } from '../auth.service';\r\nimport { tap } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  registerForm = new FormGroup({\r\n    email: new FormControl( [Validators.required, Validators.email]),\r\n    username: new FormControl(null, [Validators.required]),\r\n    firstname: new FormControl(null, [Validators.required]),\r\n    lastname: new FormControl(null, [Validators.required]),\r\n    password: new FormControl(null, [Validators.required]),\r\n    passwordConfirm: new FormControl(null, [Validators.required])\r\n  },\r\n    // add custom Validators to the form, to make sure that password and passwordConfirm are equal\r\n    { validators: CustomValidators.passwordsMatching }\r\n  )\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  register() {\r\n    if (!this.registerForm.valid) {\r\n      return;\r\n    }\r\n    if(this.registerForm.value !== undefined && this.registerForm.value!==null){\r\n      const registerForm=this.registerForm.value;\r\n    this.authService.register(registerForm).pipe(\r\n      tap(() => this.router.navigate(['../login']))\r\n    ).subscribe();\r\n  }\r\n}\r\n\r\n}\r\n */","map":{"version":3,"mappings":";;AAAA","names":[],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\public\\register\\register.component.ts"],"sourcesContent":["/* import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomValidators } from '../custom.validators';\nimport { AuthService } from '../auth.service';\nimport { tap } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  registerForm = new FormGroup({\n    email: new FormControl( [Validators.required, Validators.email]),\n    username: new FormControl(null, [Validators.required]),\n    firstname: new FormControl(null, [Validators.required]),\n    lastname: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required]),\n    passwordConfirm: new FormControl(null, [Validators.required])\n  },\n    // add custom Validators to the form, to make sure that password and passwordConfirm are equal\n    { validators: CustomValidators.passwordsMatching }\n  )\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  register() {\n    if (!this.registerForm.valid) {\n      return;\n    }\n    if(this.registerForm.value !== undefined && this.registerForm.value!==null){\n      const registerForm=this.registerForm.value;\n    this.authService.register(registerForm).pipe(\n      tap(() => this.router.navigate(['../login']))\n    ).subscribe();\n  }\n}\n\n}\n */\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}