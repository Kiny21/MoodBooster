{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/picture.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction PicturePageComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"img\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const picture_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(picture_r1.alt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", picture_r1.alt);\n    i0.ɵɵproperty(\"src\", ctx_r0.getPictureUrl(picture_r1), i0.ɵɵsanitizeUrl);\n  }\n}\nexport class PicturePageComponent {\n  constructor(pictureService, http) {\n    this.pictureService = pictureService;\n    this.http = http;\n    this.pictures = [];\n  }\n  ngOnInit() {\n    this.pictureService.findAll().subscribe(data => {\n      this.pictures = data;\n    });\n  }\n  fetchUrlContent(picture) {\n    const url = picture.url; // Add a forward slash and encode the URL\n    this.http.get(url, {\n      responseType: 'text'\n    }).subscribe(data => {\n      picture.content = data;\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nPicturePageComponent.ɵfac = function PicturePageComponent_Factory(t) {\n  return new (t || PicturePageComponent)(i0.ɵɵdirectiveInject(i1.PictureService), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nPicturePageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PicturePageComponent,\n  selectors: [[\"app-picture-page\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"card\", \"my-5\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\", \"alt\"]],\n  template: function PicturePageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\", 2)(3, \"thead\", 3)(4, \"tr\")(5, \"th\", 4);\n      i0.ɵɵtext(6, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 4);\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 4);\n      i0.ɵɵtext(10, \"Image\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, PicturePageComponent_tr_12_Template, 7, 4, \"tr\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pictures);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWQA,0BAAoD;IAC9CA,YAAW;IAAAA,iBAAK;IACpBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IACFA,yBAA8D;IAChEA,iBAAK;;;;;;IAJDA,eAAW;IAAXA,8BAAW;IACXA,eAAiB;IAAjBA,oCAAiB;IAEiBA,eAAuB;IAAvBA,+CAAuB;IAAtDA,wEAA8B;;;ACL/C,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,cAA8B,EAAUC,IAAgB;IAAxD,mBAAc,GAAdD,cAAc;IAA0B,SAAI,GAAJC,IAAI;IAFhE,aAAQ,GAAc,EAAE;EAEuD;EAE/EC,QAAQ;IACN,IAAI,CAACF,cAAc,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC7C,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAE,eAAe,CAACC,OAAgB;IAC9B,MAAMC,GAAG,GAAGD,OAAO,CAACC,GAAG,CAAC,CAAC;IACzB,IAAI,CAACR,IAAI,CAACS,GAAG,CAACD,GAAG,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACP,SAAS,CACpDC,IAAI,IAAG;MACLG,OAAO,CAACI,OAAO,GAAGP,IAAI;IACxB,CAAC,EACDQ,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AArBWf,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCtB,8BAAuB;MAKGA,iBAAC;MAAAA,iBAAK;MACtBA,6BAAgB;MAAAA,oBAAI;MAAAA,iBAAK;MACzBA,6BAAgB;MAAAA,sBAAK;MAAAA,iBAAK;MAG9BA,8BAAO;MACLA,qEAMK;MACPA,iBAAQ;;;MAPkBA,gBAAa;MAAbA,sCAAa","names":["i0","PicturePageComponent","constructor","pictureService","http","ngOnInit","findAll","subscribe","data","pictures","fetchUrlContent","picture","url","get","responseType","content","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\picture-page\\picture-page.component.html","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\pages\\picture-page\\picture-page.component.ts"],"sourcesContent":["<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Image</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let picture of pictures; let i = index\">\n          <td>{{ i + 1 }}</td>\n          <td>{{ picture.alt }}</td>\n          <td>\n            <img [src]=\"getPictureUrl(picture)\" alt=\"{{ picture.alt }}\" />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PictureService } from 'src/app/services/picture.service';\nimport { Picture } from 'src/app/shared/models/Pictures';\n\n@Component({\n  selector: 'app-picture-page',\n  templateUrl: './picture-page.component.html',\n  styleUrls: ['./picture-page.component.css']\n})\nexport class PicturePageComponent implements OnInit {\n  pictures: Picture[] = [];\n\n  constructor(private pictureService: PictureService, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.pictureService.findAll().subscribe(data => {\n      this.pictures = data;\n    });\n  }\n\n  fetchUrlContent(picture: Picture) {\n    const url = picture.url; // Add a forward slash and encode the URL\n    this.http.get(url, { responseType: 'text' }).subscribe(\n      data => {\n        picture.content = data;\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}