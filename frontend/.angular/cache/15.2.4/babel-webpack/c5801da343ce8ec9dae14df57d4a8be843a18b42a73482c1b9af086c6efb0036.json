{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/storage.service\";\nexport class LoginComponent {\n  constructor(authService, storageService) {\n    this.authService = authService;\n    this.storageService = storageService;\n    this.form = {\n      username: null,\n      password: null\n    };\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n  onSubmit() {\n    const {\n      username,\n      password\n    } = this.form;\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.StorageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,cAAc;EAUzBC,YAAoBC,WAAwB,EAAUC,cAA8B;IAAhE,gBAAW,GAAXD,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IATpE,SAAI,GAAQ;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;KACX;IACD,eAAU,GAAG,KAAK;IAClB,kBAAa,GAAG,KAAK;IACrB,iBAAY,GAAG,EAAE;IACjB,UAAK,GAAa,EAAE;EAEoE;EAExFC,QAAQ;IACN,IAAI,IAAI,CAACH,cAAc,CAACI,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE,CAACD,KAAK;;EAEpD;EAEAE,QAAQ;IACN,MAAM;MAAEN,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACM,IAAI;IAExC,IAAI,CAACT,WAAW,CAACU,KAAK,CAACR,QAAQ,EAAEC,QAAQ,CAAC,CAACQ,SAAS,CAAC;MACnDC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACZ,cAAc,CAACa,QAAQ,CAACD,IAAI,CAAC;QAElC,IAAI,CAACE,aAAa,GAAG,KAAK;QAC1B,IAAI,CAACV,UAAU,GAAG,IAAI;QACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,cAAc,CAACM,OAAO,EAAE,CAACD,KAAK;QAChD,IAAI,CAACU,UAAU,EAAE;MACnB,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACL,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;EAEAC,UAAU;IACRK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;;AAxCWzB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["LoginComponent","constructor","authService","storageService","username","password","ngOnInit","isLoggedIn","roles","getUser","onSubmit","form","login","subscribe","next","data","saveUser","isLoginFailed","reloadPage","error","err","errorMessage","message","window","location","reload","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { StorageService } from '../_services/storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private storageService: StorageService) { }\n\n  ngOnInit(): void {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.reloadPage();\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}