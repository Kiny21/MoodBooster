{"ast":null,"code":"import { PICTURES_BY_ID_URL } from 'src/app/shared/models/constants/urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PictureService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get('http://localhost:/8080/api/v1/pictures');\n  }\n  getActivityById(id) {\n    return this.http.get(PICTURES_BY_ID_URL + id);\n  }\n}\nPictureService.ɵfac = function PictureService_Factory(t) {\n  return new (t || PictureService)(i0.ɵɵinject(i1.HttpClient));\n};\nPictureService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PictureService,\n  factory: PictureService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,kBAAkB,QAAqB,sCAAsC;;;AAKtF,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,wCAAwC,CAAC;EAC3E;EAGFC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAUL,kBAAkB,GAAGO,EAAE,CAAC;EACxD;;AAVaN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFb;AAAM","names":["PICTURES_BY_ID_URL","PictureService","constructor","http","getAll","get","getActivityById","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\services\\picture.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Picture } from '../shared/models/Pictures';\nimport { PICTURES_BY_ID_URL, PICTURES_URL} from 'src/app/shared/models/constants/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PictureService {\n  constructor(private http:HttpClient) { }\n\n  getAll(): Observable<Picture[]>{\n    return this.http.get<Picture[]>('http://localhost:/8080/api/v1/pictures');\n  }\n\n\ngetActivityById(id: number): Observable<Picture>{\n  return this.http.get<Picture>(PICTURES_BY_ID_URL + id);\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}