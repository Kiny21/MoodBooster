{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/storage.service\";\nimport * as i2 from \"./_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./header/header.component\";\nexport class AppComponent {\n  constructor(storageService, authService) {\n    this.storageService = storageService;\n    this.authService = authService;\n    this.roles = [];\n    this.isLoggedIn = false;\n    this.showAdminBoard = false;\n    this.showModeratorBoard = false;\n  }\n  ngOnInit() {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.roles = user.roles;\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.username = user.username;\n    }\n  }\n  logout() {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i3.RouterOutlet, i4.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,YAAY;EAOvBC,YAAoBC,cAA8B,EAAUC,WAAwB;IAAhE,mBAAc,GAAdD,cAAc;IAA0B,gBAAW,GAAXC,WAAW;IAN/D,UAAK,GAAa,EAAE;IAC5B,eAAU,GAAG,KAAK;IAClB,mBAAc,GAAG,KAAK;IACtB,uBAAkB,GAAG,KAAK;EAG8D;EAExFC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,cAAc,CAACG,UAAU,EAAE;IAElD,IAAI,IAAI,CAACA,UAAU,EAAE;MACnB,MAAMC,IAAI,GAAG,IAAI,CAACJ,cAAc,CAACK,OAAO,EAAE;MAC1C,IAAI,CAACC,KAAK,GAAGF,IAAI,CAACE,KAAK;MAEvB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACD,KAAK,CAACE,QAAQ,CAAC,YAAY,CAAC;MACvD,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACH,KAAK,CAACE,QAAQ,CAAC,gBAAgB,CAAC;MAE/D,IAAI,CAACE,QAAQ,GAAGN,IAAI,CAACM,QAAQ;;EAEjC;EAEAC,MAAM;IACJ,IAAI,CAACV,WAAW,CAACU,MAAM,EAAE,CAACC,SAAS,CAAC;MAClCC,IAAI,EAAEC,GAAG,IAAG;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACd,cAAc,CAACiB,KAAK,EAAE;QAE3BC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;;AAnCWxB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAyB;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,6BAAyB","names":["AppComponent","constructor","storageService","authService","ngOnInit","isLoggedIn","user","getUser","roles","showAdminBoard","includes","showModeratorBoard","username","logout","subscribe","next","res","console","log","clean","window","location","reload","error","err","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\app.component.ts","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { StorageService } from './_services/storage.service';\nimport { AuthService } from './_services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username?: string;\n\n  constructor(private storageService: StorageService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.storageService.isLoggedIn();\n\n    if (this.isLoggedIn) {\n      const user = this.storageService.getUser();\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: res => {\n        console.log(res);\n        this.storageService.clean();\n\n        window.location.reload();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}