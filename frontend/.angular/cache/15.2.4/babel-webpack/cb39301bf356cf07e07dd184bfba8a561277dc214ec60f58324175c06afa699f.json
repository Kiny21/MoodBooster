{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/user.service\";\nimport * as i2 from \"../moods/moods.component\";\nexport class HomeComponent {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  ngOnInit() {\n    this.userService.getPublicContent().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {\n        console.log(err);\n        if (err.error) {\n          this.content = JSON.parse(err.error).message;\n        } else {\n          this.content = \"Error with status: \" + err.status;\n        }\n      }\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 1,\n  vars: 0,\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-moods\");\n    }\n  },\n  dependencies: [i2.MoodsComponent],\n  styles: [\"ul[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-wrap: wrap;\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nli[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{\\r\\n    height: 20rem;\\r\\n    width: 20rem;\\r\\n    border: 1px solid whitesmoke;\\r\\n    border-radius: 1rem;\\r\\n    margin: 0.5rem;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    overflow: hidden;\\r\\n    color: #cdc5fc;\\r\\n}\\r\\n\\r\\nli[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{\\r\\n    opacity: 0.8;\\r\\n    cursor:pointer;\\r\\n}\\r\\n\\r\\n.content[_ngcontent-%COMP%]{\\r\\n    padding: 0.5rem 1rem;\\r\\n    position: relative;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osNEJBQTRCO0lBQzVCLG1CQUFtQjtJQUNuQixjQUFjO0lBQ2QsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbInVse1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmxpIGF7XHJcbiAgICBoZWlnaHQ6IDIwcmVtO1xyXG4gICAgd2lkdGg6IDIwcmVtO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGVzbW9rZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XHJcbiAgICBtYXJnaW46IDAuNXJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGNvbG9yOiAjY2RjNWZjO1xyXG59XHJcblxyXG5saSBhOmhvdmVye1xyXG4gICAgb3BhY2l0eTogMC44O1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbn1cclxuXHJcbi5jb250ZW50e1xyXG4gICAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,QAAQ;IACN,IAAI,CAACD,WAAW,CAACE,gBAAgB,EAAE,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACC,OAAO,GAAGD,IAAI;MACrB,CAAC;MACDE,KAAK,EAAEC,GAAG,IAAG;QAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAC7B,IAAIA,GAAG,CAACD,KAAK,EAAE;UACb,IAAI,CAACD,OAAO,GAAGK,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACD,KAAK,CAAC,CAACM,OAAO;SAC7C,MAAM;UACL,IAAI,CAACP,OAAO,GAAG,qBAAqB,GAAGE,GAAG,CAACM,MAAM;;MAErD;KACD,CAAC;EACJ;;AAlBWhB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAiB;EAAAC;EAAAC;EAAAC;IAAA;MCZ1BC,4BAAuB","names":["HomeComponent","constructor","userService","ngOnInit","getPublicContent","subscribe","next","data","content","error","err","console","log","JSON","parse","message","status","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\home\\home.component.ts","C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivitiesService } from '../services/activities/activities.service';\nimport { Activities } from '../shared/models/Activities';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '../_services/user.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  content?: string;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getPublicContent().subscribe({\n      next: data => {\n        this.content = data;\n      },\n      error: err => {console.log(err)\n        if (err.error) {\n          this.content = JSON.parse(err.error).message;\n        } else {\n          this.content = \"Error with status: \" + err.status;\n        }\n      }\n    });\n  }\n\n  }\n\n","<app-moods></app-moods>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}