{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./_services/storage.service\";\nimport * as i2 from \"./_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./header/header.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(storageService, authService) {\n      this.storageService = storageService;\n      this.authService = authService;\n      this.roles = [];\n      this.isLoggedIn = false;\n      this.showAdminBoard = false;\n      this.showModeratorBoard = false;\n    }\n    ngOnInit() {\n      this.isLoggedIn = this.storageService.isLoggedIn();\n      if (this.isLoggedIn) {\n        const user = this.storageService.getUser();\n        this.roles = user.roles;\n        this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n        this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n        this.username = user.username;\n      }\n    }\n    logout() {\n      this.authService.logout().subscribe({\n        next: res => {\n          console.log(res);\n          this.storageService.clean();\n          window.location.reload();\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\")(1, \"router-outlet\");\n      }\n    },\n    dependencies: [i3.RouterOutlet, i4.HeaderComponent]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}