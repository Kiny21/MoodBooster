{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ActivitiesService {\n  constructor() {}\n  getActivityById(id) {\n    return this.getAll().find(activity => activity.id == id);\n  }\n  getAll() {\n    return [{\n      id: 1,\n      name: 'Music',\n      imageUrl: '\\assets\\images\\act\\Music.jpg'\n    }, {\n      id: 2,\n      name: 'Quote',\n      imageUrl: '\\assets\\images\\act\\Quote.jpg'\n    }, {\n      id: 3,\n      name: 'Video',\n      imageUrl: '\\assets\\images\\act\\Video.jpg'\n    }, {\n      id: 4,\n      name: 'Game',\n      imageUrl: '\\assets\\images\\act\\Game.jpg'\n    }];\n  }\n}\nActivitiesService.ɵfac = function ActivitiesService_Factory(t) {\n  return new (t || ActivitiesService)();\n};\nActivitiesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ActivitiesService,\n  factory: ActivitiesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,eAAgB;EAElBC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACC,MAAM,EAAE,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,EAAE,IAAGA,EAAE,CAAE;EAC1D;EAEEC,MAAM;IACJ,OAAM,CACJ;MACAD,EAAE,EAAC,CAAC;MACJI,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;KAAgC,EAEzC;MACEL,EAAE,EAAC,CAAC;MACJI,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;KAAgC,EAEzC;MAACL,EAAE,EAAC,CAAC;MACHI,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;KACV,EACD;MAACL,EAAE,EAAC,CAAC;MACHI,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAC;KACV,CACR;EACC;;AA7BWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAS,SAAjBT,iBAAiB;EAAAU,YAFhB;AAAM","names":["ActivitiesService","constructor","getActivityById","id","getAll","find","activity","name","imageUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\foodie\\foodmine-course\\src\\app\\services\\activities\\activities.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Activities } from 'src/app/shared/models/Activities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivitiesService {\n\n  constructor() { }\n\ngetActivityById(id: number): Activities{\n  return this.getAll().find(activity => activity.id ==id)!;\n}\n\n  getAll(): Activities[]{\n    return[\n      {\n      id:1,\n      name:'Music',\n      imageUrl:'\\assets\\images\\act\\Music.jpg',},\n      \n      {\n        id:2,\n        name:'Quote',\n        imageUrl:'\\assets\\images\\act\\Quote.jpg',},\n  \n        {id:3,\n          name:'Video',\n          imageUrl:'\\assets\\images\\act\\Video.jpg',\n        },\n        {id:4,\n          name:'Game',\n          imageUrl:'\\assets\\images\\act\\Game.jpg',\n        },\n]\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}